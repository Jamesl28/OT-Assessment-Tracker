# Generated by Django 5.0.14 on 2025-10-06 20:43

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('medical_record_number', models.CharField(db_index=True, help_text='Medical Record Number (unique per facility)', max_length=50, unique=True)),
                ('first_name', models.CharField(help_text="Patient's first name", max_length=150)),
                ('last_name', models.CharField(help_text="Patient's last name", max_length=150)),
                ('middle_name', models.CharField(blank=True, help_text="Patient's middle name", max_length=150)),
                ('date_of_birth', models.DateField(help_text="Patient's date of birth")),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], help_text="Patient's gender", max_length=50)),
                ('ssn_last_4', models.CharField(blank=True, help_text='Last 4 digits of SSN', max_length=4, validators=[django.core.validators.RegexValidator(message='SSN last 4 must be exactly 4 digits', regex='^\\d{4}$')])),
                ('primary_diagnosis', models.TextField(help_text='Primary diagnosis')),
                ('icd10_codes', models.JSONField(blank=True, default=list, help_text='Array of ICD-10 diagnosis codes')),
                ('secondary_diagnoses', models.JSONField(blank=True, default=list, help_text='Array of secondary diagnoses')),
                ('comorbidities', models.JSONField(blank=True, default=list, help_text='Array of comorbidities')),
                ('admission_date', models.DateField(db_index=True, help_text='Date patient was admitted')),
                ('discharge_date', models.DateField(blank=True, db_index=True, help_text='Date patient was discharged', null=True)),
                ('discharge_disposition', models.CharField(blank=True, choices=[('home', 'Home'), ('snf', 'Skilled Nursing Facility'), ('ltach', 'Long-term Acute Care Hospital'), ('rehab', 'Rehabilitation Facility'), ('deceased', 'Deceased'), ('ama', 'Against Medical Advice')], help_text='Where patient went after discharge', max_length=50)),
                ('referring_physician', models.CharField(blank=True, help_text='Name of referring physician', max_length=255)),
                ('primary_care_physician', models.CharField(blank=True, help_text='Name of primary care physician', max_length=255)),
                ('contact_phone', models.CharField(blank=True, help_text="Patient's contact phone number", max_length=20)),
                ('contact_email', models.EmailField(blank=True, help_text="Patient's email address", max_length=255)),
                ('address', models.JSONField(blank=True, default=dict, help_text="Patient's address (street, city, state, zip)")),
                ('emergency_contact', models.JSONField(blank=True, default=dict, help_text='Emergency contact information (name, relationship, phone)')),
                ('insurance_info', models.JSONField(blank=True, default=dict, help_text='Insurance information (primary, secondary)')),
                ('advance_directives', models.JSONField(blank=True, default=dict, help_text='Advance directives (DNR, healthcare proxy, etc.)')),
                ('allergies', models.JSONField(blank=True, default=list, help_text='Array of patient allergies')),
                ('medications', models.JSONField(blank=True, default=list, help_text='Array of current medications')),
                ('precautions', models.JSONField(blank=True, default=list, help_text='Array of precautions (fall_risk, isolation, etc.)')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Patient is currently active (not discharged/soft deleted)')),
                ('anonymized_for_research', models.BooleanField(default=False, help_text='Patient data has been anonymized for research purposes')),
                ('consent_for_data_use', models.BooleanField(default=False, help_text='Patient has consented to data use for research/analytics')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(help_text='User who created this patient record', on_delete=django.db.models.deletion.PROTECT, related_name='patients_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, help_text='User who last updated this patient record', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patients',
                'ordering': ['last_name', 'first_name'],
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='patients_last_na_ce6411_idx'), models.Index(fields=['is_active', 'admission_date'], name='patients_is_acti_e950d9_idx'), models.Index(fields=['medical_record_number'], name='patients_medical_f25f99_idx')],
            },
        ),
    ]
